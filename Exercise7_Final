#This will be the final submission for Exercise 7. It has the code for all three problems.

#Problem 1
#Pseudo-code = Katelyn
#Code = Hannah

#import packages (os, numpy, pandas, plotnine (from plotnine import *))
import numpy
import pandas
import scipy
from plotnine import *
import matplotlib.pyplot as plt

#open file for Lecture11.fasta
DNAseq=open("Lecture11.fasta","r")

#set lists for sequence length, GC content
sequenceID=[]
sequenceLength=[]
GCcontent=[]

#calculate sequence lengths and GC content, append to list
for line in DNAseq:
    line=line.strip()
    if '>' in line:
        sequenceID.append(line[1:])
    else:    
        seqLength=float(len(line)) #makes sequence length a number with a decimal
        sequenceLength.append(seqLength) #adds sequence length to the list
        Gnumber=line.count("G") #count number of G in sequence
        Cnumber=line.count("C") #count number of C in sequence
        GCpercent=(((Gnumber+Cnumber)/seqLength)*100) #calculate the GC content
        GCcontent.append(GCpercent) #adds GC content to list

#close file
DNAseq.close()

#make data frames
seqDF_length = pandas.DataFrame(list(zip(sequenceID,sequenceLength)),columns=['sequenceID','sequenceLength'])
seqDF_GC = pandas.DataFrame(list(zip(sequenceID,GCcontent)),columns=['sequenceID','GCpercent'])

#use ggplot to make histogram, set x axis as sequence length 
a=ggplot(seqDF_length,aes(x="sequenceLength"))
a+geom_histogram(fill='green',color='black')+theme_classic()

#use ggplot to make histrogram, set x axis as GC content
b=ggplot(seqDF_GC,aes(x="GCpercent"))
b+geom_histogram(fill='blue',color='black')+theme_classic()

#Problem 2
#Pseudo-code = Hannah
#Code = Katelyn

#import needed packages (numpy, pandas, plotnine)
#read data file
#plot hospitalizations vs age group

import pandas
import numpy
import os
import plotnine
from plotnine import *
#Influenza Hospitalizations in Singapore, Ang et al 2014
FluData = pandas.read_csv("Flu_data_final.csv",sep=",",header=0)
print(FluData)
#a=ggplot(FluData,aes(x="Age",y="Hospitalizations/100,000"))
#a+geom_point()+coord_cartesian()
a=ggplot(FluData,aes(x="Age",y="Hospitalizations/100,000"))+theme_classic()+geom_point()
a+xlab("Age(y)")+ylab("Hospitalizations/100,000")+stat_smooth(method="lm")+scale_y_log10() #y axis is log-scaled, trend line is linear but spline doesn't work

#Problem 3

